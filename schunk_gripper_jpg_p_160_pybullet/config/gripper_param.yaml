pybullet_simulation:
  robots:
    $(arg robot_name):
      package_name: 'schunk_gripper_jpg_p_160_description'
      xacro_file_path: 'urdf/schunk_gripper_jpg_p_160_pybullet.xacro'   # an urdf file with the same name will be generated
      controlled_joint_name: ['$(arg prefix)left_joint_circle']
      joint_control_mode : 'position' # positon (which is in fact POSITION_VELOCITY_PD), velocity, torque and pd.
      constraints:
        - parent_body: '$(arg robot_name)'
          parent_link: '$(arg prefix)shadow_left_slider'
          child_body: '$(arg robot_name)'
          child_link: '$(arg prefix)end_left_circle'
          type: 'fixed'             # joint type: prismatic, fixed, point2point, gear
          axis: [0,0,0]                   # joint axis, in child link frame
          parent_frame_position: [0, 0, 0]  # position of the joint frame relative to parent center of mass frame.
          child_frame_position: [0,0,0]   # position of the joint frame relative to a given child center of mass frame (or world origin if no child specified)
          parent_frame_orientation: [0,0,0,1] # the orientation of the joint frame relative to parent center of mass coordinate frame
          child_frame_orientation: [0,0,0,1]  # the orientation of the joint frame relative to the child center of mass coordinate frame (or world origin frame if no child specified)
          max_force: 10000
        - parent_body: '$(arg robot_name)'
          parent_link: '$(arg prefix)shadow_right_slider'
          child_body: '$(arg robot_name)'
          child_link: '$(arg prefix)end_right_circle'
          type: 'fixed'             # joint type: prismatic, fixed, point2point, gear
          axis: [0,0,0]                   # joint axis, in child link frame
          parent_frame_position: [0, 0, 0]  # position of the joint frame relative to parent center of mass frame.
          child_frame_position: [0,0,0]   # position of the joint frame relative to a given child center of mass frame (or world origin if no child specified)
          parent_frame_orientation: [0,0,1,0] # the orientation of the joint frame relative to parent center of mass coordinate frame
          child_frame_orientation: [0,0,0,1]  # the orientation of the joint frame relative to the child center of mass coordinate frame (or world origin frame if no child specified)
          max_force: 10000
        - parent_body: '$(arg robot_name)'
          parent_link: '$(arg prefix)left_circle'
          child_body: '$(arg robot_name)'
          child_link: '$(arg prefix)right_circle'
          type: 'gear'             # joint type: prismatic, fixed, point2point, gear
          gear_ratio: 1
          erp: 5
          # erp: 0.1
          axis: [0,1,0]                   # joint axis, in child link frame
          parent_frame_position: [0,0,0]  # position of the joint frame relative to parent center of mass frame.
          child_frame_position: [0,0,0]   # position of the joint frame relative to a given child center of mass frame (or world origin if no child specified)
          parent_frame_orientation: [0,0,0,1] # the orientation of the joint frame relative to parent center of mass coordinate frame
          child_frame_orientation: [0,0,0,1]  # the orientation of the joint frame relative to the child center of mass coordinate frame (or world origin frame if no child specified)
          max_force: 10000

      # link_dynamics:
        # - link_name: '$(arg prefix)right_finger'
        #   lateral_friction: 60
        #   spinning_friction: 0.1
        #   rolling_friction: 0.1
        #   contact_stiffness: 1000000
        #   contact_damping: 1
        #   linear_damping: 0
        #   angular_damping: 0
        #   friction_anchor: 1
        # - link_name: '$(arg prefix)left_finger'
        #   lateral_friction: 60
        #   spinning_friction: 0.1
        #   rolling_friction: 0.1
        #   contact_stiffness: 1000000
        #   contact_damping: 1
        #   linear_damping: 0
        #   angular_damping: 0
        #   friction_anchor: 1
